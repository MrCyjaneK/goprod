package main

import (
	_ "archive/tar"
	_ "archive/zip"
	_ "bufio"
	_ "bytes"
	_ "compress/bzip2"
	_ "compress/flate"
	_ "compress/gzip"
	_ "compress/lzw"
	_ "compress/zlib"
	_ "container/heap"
	_ "container/list"
	_ "container/ring"
	_ "context"
	_ "crypto"
	_ "crypto/aes"
	_ "crypto/cipher"
	_ "crypto/des"
	_ "crypto/ecdsa"
	_ "crypto/ed25519"
	_ "crypto/elliptic"
	_ "crypto/hmac"
	_ "crypto/md5"
	_ "crypto/rand"
	_ "crypto/rc4"
	_ "crypto/rsa"
	_ "crypto/sha1"
	_ "crypto/sha256"
	_ "crypto/sha512"
	_ "crypto/subtle"
	_ "crypto/tls"
	_ "crypto/x509"
	_ "crypto/x509/pkix"
	_ "database/sql"
	_ "database/sql/driver"
	_ "encoding"
	_ "encoding/ascii85"
	_ "encoding/asn1"
	_ "encoding/base32"
	_ "encoding/base64"
	_ "encoding/binary"
	_ "encoding/csv"
	_ "encoding/gob"
	_ "encoding/hex"
	_ "encoding/json"
	_ "encoding/pem"
	_ "encoding/xml"
	_ "errors"
	_ "expvar"
	_ "flag"
	_ "fmt"
	_ "hash"
	_ "hash/adler32"
	_ "hash/crc32"
	_ "hash/crc64"
	_ "hash/fnv"
	_ "hash/maphash"
	_ "html"
	_ "html/template"
	_ "image"
	_ "image/color"
	_ "image/color/palette"
	_ "image/draw"
	_ "image/gif"
	_ "image/jpeg"
	_ "image/png"
	_ "io"
	_ "io/ioutil"
	_ "log"
	_ "log/syslog"
	_ "math"
	_ "math/big"
	_ "math/bits"
	_ "math/cmplx"
	_ "math/rand"
	_ "mime"
	_ "mime/multipart"
	_ "mime/quotedprintable"
	_ "path"
	_ "path/filepath"
	_ "plugin"
	_ "reflect"
	_ "regexp"
	_ "regexp/syntax"
	_ "sort"
	_ "strconv"
	_ "strings"
	_ "text/scanner"
	_ "text/tabwriter"
	_ "text/template"
	_ "text/template/parse"
	_ "time"
	_ "time/tzdata"
	_ "unicode"
	_ "unicode/utf16"
	_ "unicode/utf8"
)

func main() {
	// This program does nothing, except for requiring whole standard library
	// It's used to pre-compile the standard library so build times will be faster
}

// // You can generate this file by going to https://pkg.go.dev/std
// // and pasting this:
// // after that paste it in import() and fix errors.
// a = document.getElementsByTagName('a')
// b = [];
// for (i = 0; i < a.length; i++) {
//     if (a[i].href.substr(0,19) == "https://pkg.go.dev/" && a[i].href.split('@').length == 2) {
//         b.push(a[i].href.substr(19).split('@')[0])
//     }
// }
// console.log("\t\""+b.join("\"\n\t_ \""))
